How did viewing a diff between two versions of a file help you see the bug that was introduced?

By seeing the lines that were changed, you can narrow down where the actual error took place in the code.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You can save a previous (working) version under a different name and then use FC to compare the file to find bugs.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: Commits will be made at logical stopping points, should be an appropriate number of commits.
Cons: Users can save too often/ not often enough.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Programs are interrelated and often changes will be made simultaneously across several files. 

How can you use the commands git log and git diff to view the history of files?

Git log allows you to see all commits for a given repository.  By using git diff followed by the ids of two commits you can then compare the two different versions of the repository.

How might using version control make you more confident to make changes that could break something?

You know that even if you do break something it's easy to go back to a period before the thing was broken.
